install.packages("MASS")
library(MASS)
X1 <- rnorm(100); X2 <- rnorm(100); X3 <- rnorm(100)
?polr
fit <- polr(ordered(Y) ˜ X1 + X2 + X3, method = "probit")
X1 <- rnorm(100); X2 <- rnorm(100); X3 <- rnorm(100)
fit <- polr(ordered(Y) ˜ X1 + X2 + X3, method = "probit")
fit <- polr(ordered(Y) ~ X1 + X2 + X3, method = "probit")
fit <- polr(ordered(Y) ~ X1 + X2 + X3, method = "probit")
fit$zeta
fit <- polr(ordered(Y) ~ X1 + X2 + X3, method = "probit")
Y <- sample(1:4, size = 100, replace = TRUE)
fit <- polr(ordered(Y) ~ X1 + X2 + X3, method = "probit")
fit$zeta
fit
X1 <- rnorm(100);
X1 <- rnorm(6)
var(X1)
mean(X1)
paste(1:12)
d<-paste(1:12)
d
(nth <- paste0(1:12, c("st", "nd", "rd", rep("th", 9))))
str(data)
head(data)
data = read.csv("IRTBIPOLAR.txt",sep = '\t')
setwd("G:\\My Drive\\IME-USP\\RLanguage\\repository\\rcode\\code\\sim\\0016-MIRT-Maia")
head(data)
dim(data)
library(mirt)
setwd("G:\\My Drive\\IME-USP\\RLanguage\\repository\\rcode\\code\\sim\\0016-MIRT-Maia")
data = read.csv("IRTBIPOLAR.txt",sep = '\t')
rm(list())
list()
ls()
mydata = read.csv("EQUIPE-2017-S1-PROVA034-QUIZ538-GAB-RAW.TXT")
#working on server00
setwd("G:\\Meu Drive\\IME-USP\\RLanguage\\repository\\rcode\\code\\dat")
#working on server00
setwd("E:\\Meu Drive\\IME-USP\\RLanguage\\repository\\rcode\\code\\dat")
#working on server00
setwd("H:\\Meu Drive\\IME-USP\\RLanguage\\repository\\rcode\\code\\dat")
mydata = read.csv("EQUIPE-2017-S1-PROVA034-QUIZ538-GAB-RAW.TXT")
#confirmando dimensoes
ncol(mydata)
nrow(mydata)
dim(mydata)
head(mydata)
gabarito <- mydata[1,2:176]
str(ItemNames)
ItemNames <- colnames(gabarito)
str(ItemNames)
#scoring
raw_scores <- score(data,gabarito,output.scored=TRUE, rel=TRUE)
str(raw_scores)
data <-mydata[2:739,2:176]
#scoring
raw_scores <- score(data,gabarito,output.scored=TRUE, rel=TRUE)
library(CTT)
library(xtable)
install.packages("CTT")
install.packages("xtable")
library(CTT)
library(xtable)
#scoring
raw_scores <- score(data,gabarito,output.scored=TRUE, rel=TRUE)
str(raw_scores)
raw_scores
str(raw_scores)
raw_scores$reliability
raw_scores$reliability[[1]]
raw_scores$reliability[[2]]
raw_scores$reliability[[3]]
raw_scores$scored
# Analise de distratores
distractorAnalysis(data,gabarito)
# Analise de distratores
iteman<-distractorAnalysis(data,gabarito)
raw_scores$reliability[[3]]
iteman[[1]]
iteman[["CH001"]]
iteman[["CH001"]]$pBis
?distractorAnalysis
# Analise de distratores
iteman<-distractorAnalysis(data,gabarito,nGroups=3)
iteman[["CH001"]]$pBis
iteman[["CH001"]]
iteman[["CH001"]][,1]
iteman[["CH001"]][,2]
iteman[["CH001"]][,7,8,9]
iteman[["CH001"]][,"lower"]
?plot
iteman[["CH001"]][1,6..8]
iteman[["CH001"]][1,6]
iteman[["CH001"]][1,7...9]
iteman[["CH001"]][1,c(7,8,9)]
iteman[["CH001"]][1..5,c(7,8,9)]
iteman[["CH001"]][1:5,c(7,8,9)]
data <-iteman[["CH001"]][1:5,c(7,8,9)]
data [,1]
plot(data[1,])
xplot(data[1,])
nplot(data[1,])
data[1,]
nplot(y=data[1,],type =l )
plot(y=data[1,],type =l )
plot(x=c("lower","mid","upper"),y=data[1,],type =l )
plot(x=c("lower","mid","upper"),y=data[1,] )
plot(c(1,2,3), data[1,])
plot(c('l','a','g'), data[1,])
